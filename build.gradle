apply plugin: 'com.android.library'

repositories {
    google()
    mavenCentral()
    mavenLocal()
}

ext {
    groupOpen = false
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
        // to generate the required jar dependencies e.g. cling seamless
        preBuild.dependsOn(ndkBuild)
    }
}

configurations {
    all {
        exclude group: 'org.json', module: 'json'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    gradle.startParameter.getTaskNames().each { task ->
        if (task.contains("Open")) {
            groupOpen = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            //tmp prebuilt jni
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
	multiDexEnabled true
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    clean.dependsOn 'ndkClean'

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/beans.xml'
        exclude 'META-INF/maven'
        exclude 'README'
    }
}

task ndkBuild(type:Exec) {
    workingDir = "../"
    List<String> myCmd = new ArrayList<String>()
    myCmd.add("make")
    myCmd.add("native_libyuv")
    myCmd.add("native_libnativehelper")
    myCmd.add("native_avos_full")
    myCmd.add("native_torrentd")
    //myCmd.add("trakt-java")
    myCmd.add("seamless")
    myCmd.add("cling")
    commandLine myCmd
}

task ndkClean(type:Exec) {
    workingDir = "../"
    List<String> myCmd = new ArrayList<String>()
    myCmd.add("make")
    myCmd.add("native_clean")
    //myCmd.add("external_clean_trakt-java")
    //myCmd.add("external_clean_seamless")
    //myCmd.add("external_clean_cling")
    commandLine myCmd
}

def useSan = false
if (useSan)
    apply from: 'profiling.gradle'

dependencies {
    implementation project(':FileCoreLibrary')
    //implementation 'com.android.support:support-v4:28.0.0'
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.media:media:1.2.1'
    implementation 'androidx.fragment:fragment:1.2.5'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    //implementation 'cz.msebera.android:httpclient:4.5.8'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.0'
    implementation group: 'org.json', name: 'json', version: '20180813'
    // trakt depedencies: we imported the source code
    //api 'com.uwetrottmann.trakt5:trakt-java:6.1.0'
    //api files('libs/trakt-java.jar')
    implementation ('com.uwetrottmann.trakt5:trakt-java:6.8.0') {
        exclude group: 'org.threeten', module: 'threetenbp'
    }
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.3'
    api 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.0'
    api 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.common:1.0.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.13'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    // version aligned with external dependencies trakt-java thetvdb-java (check pom.xml)
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.uwetrottmann.thetvdb-java:thetvdb-java:2.4.0'
    //api files('libs/thetvdb-java-2.2.1-SNAPSHOT.jar')
    implementation 'com.uwetrottmann.tmdb2:tmdb-java:2.2.0'
    // official dependencies for cling 2.1.2 is https://github.com/4thline/cling/blob/master/distribution/src/dist/README.txt
    // no host discovery if switch from 2.1.1 to 2.1.2 supposed to be fixed in 2.1.1 https://github.com/4thline/cling/issues/164
    //api group: 'org.fourthline.cling', name: 'cling-core', version:'2.1.1'
    //implementation group: 'org.fourthline.cling', name: 'cling-support', version:'2.1.1'
    api files('libs/cling-core-2.1.2.jar');
    implementation files('libs/cling-support-2.1.2.jar');
    implementation files('libs/seamless-util-1.1.2.jar');
    implementation files('libs/seamless-http-1.1.2.jar');
    implementation files('libs/seamless-xml-1.1.2.jar');
    implementation files('libs/seamless-swing-1.1.2.jar');
    implementation group: 'org.eclipse.jetty', name: 'jetty-server', version:'8.1.22.v20160922'
    implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'8.1.22.v20160922'
    implementation group: 'org.eclipse.jetty', name: 'jetty-client', version:'8.1.22.v20160922'
}
